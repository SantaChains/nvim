return{
    -- Git 差异查看器
  {
    'sindrets/diffview.nvim',
    dependencies = { 'nvim-lua/plenary.nvim' },
    cmd = { 'DiffviewOpen', 'DiffviewClose', 'DiffviewToggleFiles', 'DiffviewFocusFiles', 'DiffviewFileHistory' },
    keys = {
      { '<leader>gd', '<CMD>DiffviewOpen<CR>', desc = 'Open diff view' },
      { '<leader>gD', '<CMD>DiffviewOpen HEAD~1<CR>', desc = 'Diff with last commit' },
      { '<leader>gh', '<CMD>DiffviewFileHistory %<CR>', desc = 'File history' },
      { '<leader>gH', '<CMD>DiffviewFileHistory<CR>', desc = 'Branch history' },
      { '<leader>gc', '<CMD>DiffviewClose<CR>', desc = 'Close diff view' },
      { '<leader>gf', '<CMD>DiffviewToggleFiles<CR>', desc = 'Toggle file panel' },
    },
    opts = {
      diff_binaries = false,
      enhanced_diff_hl = true,
      git_cmd = { 'git' },
      use_icons = true,
      watch_index = true,
      icons = {
        folder_closed = '',
        folder_open = '',
      },
      signs = {
        fold_closed = '',
        fold_open = '',
        done = '✓',
      },
      view = {
        default = {
          layout = 'diff2_horizontal',
          winbar_info = true,
        },
        merge_tool = {
          layout = 'diff3_horizontal',
          disable_diagnostics = true,
          winbar_info = true,
        },
        file_history = {
          layout = 'diff2_horizontal',
          winbar_info = true,
        },
      },
      file_panel = {
        listing_style = 'tree',
        tree_options = {
          flatten_dirs = true,
          folder_statuses = 'only_folded',
        },
        win_config = {
          position = 'left',
          width = 35,
          height = 10,
        },
      },
      file_history_panel = {
        log_options = {
          git = {
            single_file = {
              diff_merges = 'combined',
            },
            multi_file = {
              diff_merges = 'first-parent',
            },
          },
        },
        win_config = {
          position = 'bottom',
          height = 16,
        },
      },
      commit_log_panel = {
        win_config = {
          height = 16,
        },
      },
      default_args = {
        DiffviewOpen = {},
        DiffviewFileHistory = {},
      },
      hooks = {},
      keymaps = {
        disable_defaults = false,
        view = {
          { 'n', '<tab>', function() require('diffview.actions').select_next_entry() end, { desc = 'Next entry' } },
          { 'n', '<s-tab>', function() require('diffview.actions').select_prev_entry() end, { desc = 'Previous entry' } },
          { 'n', 'gf', function() require('diffview.actions').goto_file() end, { desc = 'Go to file' } },
          { 'n', '<C-w><C-f>', function() require('diffview.actions').goto_file_split() end, { desc = 'Go to file in split' } },
          { 'n', '<C-w>gf', function() require('diffview.actions').goto_file_tab() end, { desc = 'Go to file in tab' } },
          { 'n', '<leader>e', function() require('diffview.actions').focus_files() end, { desc = 'Focus files' } },
          { 'n', '<leader>b', function() require('diffview.actions').toggle_files() end, { desc = 'Toggle files' } },
          { 'n', 'g<C-x>', function() require('diffview.actions').cycle_layout() end, { desc = 'Cycle layout' } },
          { 'n', '[x', function() require('diffview.actions').prev_conflict() end, { desc = 'Previous conflict' } },
          { 'n', ']x', function() require('diffview.actions').next_conflict() end, { desc = 'Next conflict' } },
        },
        diff1 = {
          { 'n', 'g?', function() require('diffview.actions').help('view') end, { desc = 'Help' } },
        },
        diff2 = {
          { 'n', 'g?', function() require('diffview.actions').help('view') end, { desc = 'Help' } },
        },
        diff3 = {
          { { 'n', 'x' }, '2do', function() require('diffview.actions').diffget('ours') end, { desc = 'Get from OURS' } },
          { { 'n', 'x' }, '3do', function() require('diffview.actions').diffget('theirs') end, { desc = 'Get from THEIRS' } },
          { 'n', 'g?', function() require('diffview.actions').help('view') end, { desc = 'Help' } },
        },
        diff4 = {
          { { 'n', 'x' }, '1do', function() require('diffview.actions').diffget('base') end, { desc = 'Get from BASE' } },
          { { 'n', 'x' }, '2do', function() require('diffview.actions').diffget('ours') end, { desc = 'Get from OURS' } },
          { { 'n', 'x' }, '3do', function() require('diffview.actions').diffget('theirs') end, { desc = 'Get from THEIRS' } },
          { 'n', 'g?', function() require('diffview.actions').help('view') end, { desc = 'Help' } },
        },
        file_panel = {
          { 'n', 'j', function() require('diffview.actions').next_entry() end, { desc = 'Next entry' } },
          { 'n', '<down>', function() require('diffview.actions').next_entry() end, { desc = 'Next entry' } },
          { 'n', 'k', function() require('diffview.actions').prev_entry() end, { desc = 'Previous entry' } },
          { 'n', '<up>', function() require('diffview.actions').prev_entry() end, { desc = 'Previous entry' } },
          { 'n', '<cr>', function() require('diffview.actions').select_entry() end, { desc = 'Select entry' } },
          { 'n', 'o', function() require('diffview.actions').select_entry() end, { desc = 'Select entry' } },
          { 'n', '<2-LeftMouse>', function() require('diffview.actions').select_entry() end, { desc = 'Select entry' } },
          { 'n', '-', function() require('diffview.actions').toggle_stage_entry() end, { desc = 'Toggle stage' } },
          { 'n', 'S', function() require('diffview.actions').stage_all() end, { desc = 'Stage all' } },
          { 'n', 'U', function() require('diffview.actions').unstage_all() end, { desc = 'Unstage all' } },
          { 'n', 'X', function() require('diffview.actions').restore_entry() end, { desc = 'Restore entry' } },
          { 'n', 'L', function() require('diffview.actions').open_commit_log() end, { desc = 'Open commit log' } },
          { 'n', '<c-b>', function() require('diffview.actions').scroll_view(-0.25) end, { desc = 'Scroll up' } },
          { 'n', '<c-f>', function() require('diffview.actions').scroll_view(0.25) end, { desc = 'Scroll down' } },
          { 'n', '<tab>', function() require('diffview.actions').select_next_entry() end, { desc = 'Next entry' } },
          { 'n', '<s-tab>', function() require('diffview.actions').select_prev_entry() end, { desc = 'Previous entry' } },
          { 'n', 'gf', function() require('diffview.actions').goto_file() end, { desc = 'Go to file' } },
          { 'n', '<C-w><C-f>', function() require('diffview.actions').goto_file_split() end, { desc = 'Go to file in split' } },
          { 'n', '<C-w>gf', function() require('diffview.actions').goto_file_tab() end, { desc = 'Go to file in tab' } },
          { 'n', 'i', function() require('diffview.actions').listing_style() end, { desc = 'Toggle listing style' } },
          { 'n', 'f', function() require('diffview.actions').toggle_flatten_dirs() end, { desc = 'Toggle flatten dirs' } },
          { 'n', 'R', function() require('diffview.actions').refresh_files() end, { desc = 'Refresh files' } },
          { 'n', '<leader>e', function() require('diffview.actions').focus_files() end, { desc = 'Focus files' } },
          { 'n', '<leader>b', function() require('diffview.actions').toggle_files() end, { desc = 'Toggle files' } },
          { 'n', 'g<C-x>', function() require('diffview.actions').cycle_layout() end, { desc = 'Cycle layout' } },
          { 'n', '[x', function() require('diffview.actions').prev_conflict() end, { desc = 'Previous conflict' } },
          { 'n', ']x', function() require('diffview.actions').next_conflict() end, { desc = 'Next conflict' } },
          { 'n', 'g?', function() require('diffview.actions').help('file_panel') end, { desc = 'Help' } },
        },
        file_history_panel = {
          { 'n', 'g!', function() require('diffview.actions').options() end, { desc = 'Options' } },
          { 'n', '<C-A-d>', function() require('diffview.actions').open_in_diffview() end, { desc = 'Open in diffview' } },
          { 'n', 'y', function() require('diffview.actions').copy_hash() end, { desc = 'Copy hash' } },
          { 'n', 'L', function() require('diffview.actions').open_commit_log() end, { desc = 'Open commit log' } },
          { 'n', 'zR', function() require('diffview.actions').open_all_folds() end, { desc = 'Open all folds' } },
          { 'n', 'zM', function() require('diffview.actions').close_all_folds() end, { desc = 'Close all folds' } },
          { 'n', 'j', function() require('diffview.actions').next_entry() end, { desc = 'Next entry' } },
          { 'n', '<down>', function() require('diffview.actions').next_entry() end, { desc = 'Next entry' } },
          { 'n', 'k', function() require('diffview.actions').prev_entry() end, { desc = 'Previous entry' } },
          { 'n', '<up>', function() require('diffview.actions').prev_entry() end, { desc = 'Previous entry' } },
          { 'n', '<cr>', function() require('diffview.actions').select_entry() end, { desc = 'Select entry' } },
          { 'n', 'o', function() require('diffview.actions').select_entry() end, { desc = 'Select entry' } },
          { 'n', '<2-LeftMouse>', function() require('diffview.actions').select_entry() end, { desc = 'Select entry' } },
          { 'n', '<c-b>', function() require('diffview.actions').scroll_view(-0.25) end, { desc = 'Scroll up' } },
          { 'n', '<c-f>', function() require('diffview.actions').scroll_view(0.25) end, { desc = 'Scroll down' } },
          { 'n', '<tab>', function() require('diffview.actions').select_next_entry() end, { desc = 'Next entry' } },
          { 'n', '<s-tab>', function() require('diffview.actions').select_prev_entry() end, { desc = 'Previous entry' } },
          { 'n', 'gf', function() require('diffview.actions').goto_file() end, { desc = 'Go to file' } },
          { 'n', '<C-w><C-f>', function() require('diffview.actions').goto_file_split() end, { desc = 'Go to file in split' } },
          { 'n', '<C-w>gf', function() require('diffview.actions').goto_file_tab() end, { desc = 'Go to file in tab' } },
          { 'n', '<leader>e', function() require('diffview.actions').focus_files() end, { desc = 'Focus files' } },
          { 'n', '<leader>b', function() require('diffview.actions').toggle_files() end, { desc = 'Toggle files' } },
          { 'n', 'g<C-x>', function() require('diffview.actions').cycle_layout() end, { desc = 'Cycle layout' } },
          { 'n', 'g?', function() require('diffview.actions').help('file_history_panel') end, { desc = 'Help' } },
        },
        option_panel = {
          { 'n', '<tab>', function() require('diffview.actions').select_entry() end, { desc = 'Select entry' } },
          { 'n', 'q', function() require('diffview.actions').close() end, { desc = 'Close' } },
          { 'n', 'g?', function() require('diffview.actions').help('option_panel') end, { desc = 'Help' } },
        },
        help_panel = {
          { 'n', 'q', function() require('diffview.actions').close() end, { desc = 'Close' } },
        },
      },
    },
  },

  -- Git 操作界面
  {
    'NeogitOrg/neogit',
    dependencies = {
      'nvim-lua/plenary.nvim',
      'sindrets/diffview.nvim',
      'nvim-telescope/telescope.nvim',
    },
    cmd = 'Neogit',
    keys = {
      { '<leader>gg', '<CMD>Neogit<CR>', desc = 'Open Neogit' },
      { '<leader>gC', '<CMD>Neogit commit<CR>', desc = 'Git commit' },
      { '<leader>gP', '<CMD>Neogit push<CR>', desc = 'Git push' },
      { '<leader>gp', '<CMD>Neogit pull<CR>', desc = 'Git pull' },
    },
    opts = {
      integrations = {
        telescope = true,
        diffview = true,
      },
      sections = {
        untracked = {
          folded = false,
        },
        unstaged = {
          folded = false,
        },
        staged = {
          folded = false,
        },
        stashes = {
          folded = true,
        },
        unpulled_upstream = {
          folded = true,
        },
        unmerged_upstream = {
          folded = false,
        },
        unpulled_pushRemote = {
          folded = true,
        },
        unmerged_pushRemote = {
          folded = false,
        },
        recent = {
          folded = true,
        },
        rebase = {
          folded = true,
        },
      },
      mappings = {
        commit_editor = {
          ['q'] = 'Close',
          ['<c-c><c-c>'] = 'Submit',
          ['<c-c><c-k>'] = 'Abort',
        },
        rebase_editor = {
          ['p'] = 'Pick',
          ['r'] = 'Reword',
          ['e'] = 'Edit',
          ['s'] = 'Squash',
          ['f'] = 'Fixup',
          ['x'] = 'Execute',
          ['d'] = 'Drop',
          ['b'] = 'Break',
          ['q'] = 'Close',
          ['<cr>'] = 'OpenCommit',
          ['gk'] = 'MoveUp',
          ['gj'] = 'MoveDown',
          ['<c-c><c-c>'] = 'Submit',
          ['<c-c><c-k>'] = 'Abort',
        },
        finder = {
          ['<cr>'] = 'Select',
          ['<c-c>'] = 'Close',
          ['<esc>'] = 'Close',
          ['<c-n>'] = 'Next',
          ['<c-p>'] = 'Previous',
          ['<down>'] = 'Next',
          ['<up>'] = 'Previous',
          ['<tab>'] = 'MultiselectToggleNext',
          ['<s-tab>'] = 'MultiselectTogglePrevious',
          ['<c-j>'] = 'NOP',
        },
        popup = {
          ['?'] = 'HelpPopup',
          ['A'] = 'CherryPickPopup',
          ['D'] = 'DiffPopup',
          ['M'] = 'RemotePopup',
          ['P'] = 'PushPopup',
          ['X'] = 'ResetPopup',
          ['Z'] = 'StashPopup',
          ['b'] = 'BranchPopup',
          ['c'] = 'CommitPopup',
          ['f'] = 'FetchPopup',
          ['l'] = 'LogPopup',
          ['m'] = 'MergePopup',
          ['p'] = 'PullPopup',
          ['r'] = 'RebasePopup',
          ['v'] = 'RevertPopup',
        },
        status = {
          ['q'] = 'Close',
          ['I'] = 'InitRepo',
          ['1'] = 'Depth1',
          ['2'] = 'Depth2',
          ['3'] = 'Depth3',
          ['4'] = 'Depth4',
          ['<tab>'] = 'Toggle',
          ['x'] = 'Discard',
          ['s'] = 'Stage',
          ['S'] = 'StageUnstaged',
          ['<c-s>'] = 'StageAll',
          ['u'] = 'Unstage',
          ['U'] = 'UnstageStaged',
          ['$'] = 'CommandHistory',
          ['#'] = 'Console',
          ['<c-r>'] = 'RefreshBuffer',
          ['<enter>'] = 'GoToFile',
          ['<c-v>'] = 'VSplitOpen',
          ['<c-x>'] = 'SplitOpen',
          ['<c-t>'] = 'TabOpen',
          ['{'] = 'GoToPreviousHunkHeader',
          ['}'] = 'GoToNextHunkHeader',
        },
      },
      signs = {
        hunk = { '', '' },
        item = { '>', 'v' },
        section = { '>', 'v' },
      },
      graph_style = 'unicode',
      git_services = {
        ['github.com'] = 'https://github.com/${owner}/${repository}/compare/${branch_name}?expand=1',
        ['bitbucket.org'] = 'https://bitbucket.org/${owner}/${repository}/pull-requests/new?source=${branch_name}&t=1',
        ['gitlab.com'] = 'https://gitlab.com/${owner}/${repository}/merge_requests/new?merge_request[source_branch]=${branch_name}',
      },
      telescope_sorter = function()
        return require('telescope').extensions.fzf.native_fzf_sorter()
      end,
      remember_settings = true,
      use_per_project_settings = true,
      ignored_settings = {
        'NeogitPushPopup--force-with-lease',
        'NeogitPushPopup--force',
        'NeogitPullPopup--rebase',
        'NeogitCommitPopup--allow-empty',
        'NeogitRevertPopup--no-edit',
      },
      auto_refresh = true,
      sort_branches = '-committerdate',
      kind = 'tab',
      disable_hint = false,
      disable_context_highlighting = false,
      disable_signs = false,
      disable_insert_on_commit = 'auto',
      filewatcher = {
        interval = 1000,
        enabled = true,
      },
      highlight = {
        italic = true,
        bold = true,
        underline = true,
      },
    },
  },
--     Git 状态显示
  {
    "lewis6991/gitsigns.nvim",
    event = { "BufReadPre", "BufNewFile" },
    opts = {
      signs = {
        add = { text = "│" }, change = { text = "│" },
        delete = { text = "_" }, topdelete = { text = "‾" },
        changedelete = { text = "~" },
      },
    },
  },
}